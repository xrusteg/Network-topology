#!/usr/bin/perl
use strict;
use warnings;
use JSON::RPC::Client;
use Zabbix::Tiny;
use Data::Dumper;

#################
#Получаем ИД карты по имени и сносим её без каких либо доп. модулей, ибо с Zabbix::Tiny нифига не работает
#################

##############
#Ищем ИД хоста по имени, рисуем карту с хостом
##############
my $username = 'Admin';
my $password = 'zabbix';
my $url = 'http://127.0.0.1/zabbix/api_jsonrpc.php';

my $zabbix = Zabbix::Tiny->new(
    server   => $url,
    password => $password,
    user     => $username
);
my @mapid;
$mapid[0] = $zabbix->do('map.getobjects', name => 'topology') -> [0]{'sysmapid'};
my $qmapid = $zabbix->do('map.delete', \@mapid);
print Dumper \$qmapid;


my $hosts = $zabbix->do(
    'host.get',
    output    => [qw(hostid name host)],
);

#print Dumper \$hosts;
my $hostid;
my @arr_hash;
for my $host (@$hosts) { #hostid по имени
    if ($host->{name} eq "orange pi") {$hostid = $host->{hostid};}
}

my @hp1=['VM1','VM2'];
my @hp2=['VM3','VM4'];
my @hps=(['VM1','VM2'],['VM3','VM4']);
print Dumper \@hps;
my @nodes;
my @links;

push (@nodes, {		
		'elementid' => '10106',
		'selementid' => '1',
		'elementtype' => '0',
		'iconid_off' => '2',
		'x' => '50',
		'y' => '150'
	}
);
push (@nodes, {		
		'elementid' => '10107',
		'selementid' => '2',
		'elementtype' => '0',
		'iconid_off' => '2',
		'x' => '150',
		'y' => '150'
	}
);

push (@links, {
		'selementid1' => '1',
		'selementid2' => '2',
		}
);


my %params = (
	'name' => 'topology',
	'width' => '600',
	'height' => '600',
	'selements' => \@nodes,
	'links' => \@links
	);
my $res = $zabbix->do('map.create',%params);
#print Dumper \$res;

##создать искусственные узлы, проверять, есть ли они в заббиксе, если нет - добавлять, рисовать
